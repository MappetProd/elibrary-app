@using EL.Service.DTO;
@model IEnumerable<ReaderApplicationDTO>

@{
    foreach (ReaderApplicationDTO application in Model)
    {
        string elementId = string.Format("application{0}", application.Id);
        <h2 class="accordion-header" id="@string.Format("{0}Heading", application.Id)">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="@string.Concat("#", application.Id)" aria-expanded="false" aria-controls="@elementId">
                Заявка #@application.ApplicationNumber
            </button>
        </h2>
        <div id="@application.Id" class="accordion-collapse collapse" aria-labelledby="pendingRequest1Heading" data-bs-parent="#pendingRequestsAccordion">
            <div class="accordion-body">
                <p><strong>Дата создания: </strong>@application.CreationDtm.ToString("g")</p>
                @if (application.ResolveDtm != null)
                {
                    <p><strong>Дата начала действия: </strong>@application.ResolveDtm?.ToLocalTime().ToString("g")</p>
                }
                @if (application.DeadlineDate != null)
                {
                    <p><strong>Установленный срок сдачи: </strong> @application.DeadlineDate?.ToString("dd/MM/yyyy")</p>
                }
                @if (application.ActualReturnDate != null)
                {
                    <p><strong>Фактическая дата сдачи: </strong> @application.ActualReturnDate?.ToLocalTime().ToString("g")</p>
                }

                @await Html.PartialAsync("/Pages/_PartialMinimizedBooksOutput.cshtml", application.MinimizedPrintedBookDTOs)
            </div>
        </div>
    }
}

